; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = 
	wired
	wifi
	wired_rel
	wifi_rel

[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
monitor_filters = 
	esp32_exception_decoder
	log2file
	time
	default
debug_tool = esp-prog
build_type = debug
debug_init_break = tbreak setup
debug_load_mode = manual
upload_port = COM17
monitor_port = COM17
build_flags = -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_ERROR -D INCLUDE_uxTaskGetStackHighWaterMark=1
lib_deps = 
	boazf/HttpUpdate
	shawndooley/tinyfsm@^0.3.2
extra_scripts = pre:extra_scripts.py

[env:wired]
extends = env:esp32
build_flags = ${env:esp32.build_flags} -D ICMPPING_ASYNCH_ENABLE -g3 -O0 -I.pio/libdeps/wired/ArduinoPing/icmp_ping
lib_deps = 
	${env:esp32.lib_deps}
	arduino-libraries/Ethernet
	sayyidyofa/ArduinoPing@^3.0
lib_ignore = ArduinoPing

[env:wifi]
extends = env:esp32
build_flags = ${env:esp32.build_flags} -D USE_WIFI -g3 -O0
lib_deps = 
	${env:esp32.lib_deps}
	marian-craciunescu/ESP32Ping@^1.7

[env:wired_rel]
extends = env:wired
build_flags = ${env:wired.build_flags} -D RELEASE

[env:wifi_rel]
extends = env:wifi
build_flags = ${env:wifi.build_flags} -D RELEASE

[env:tests]
platform = native
build_type = debug
lib_deps = 
	fabiobatsilva/ArduinoFake@^0.4.0
	shawndooley/tinyfsm@^0.3.2
build_flags = 
	-I.pio/libdeps/tests/ArduinoFake/src/arduino
	-Itest
	-Iinclude
	-Isrc
; test_build_src = yes
; build_src_filter = 
; 	+<HtmlFillerViewReader.cpp>
